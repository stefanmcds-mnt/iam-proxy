#!/bin/sh
### BEGIN INIT INFO
# Provides:          pyffd
# Required-Start:    nginx
# Required-Stop:
# Should-Start:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Create dynamic part of /etc/motd
# Description:       /etc/motd is user-editable and static.  This script
#                    creates the initial dynamic part, by default the
#                    output of uname, and stores it in /var/run/motd.dynamic.
#                    Both parts are output by pam_motd.
### END INIT INFO

# and then
# update-rc.d pyffd defaults
# update-rc.d pyffd enable

PATH=/sbin:/usr/sbin:/bin:/usr/bin
BASEDIR="/opt"
ENVDIR="$BASEDIR/django-saml2-idp.env"
APPNAME="pyff"
APPDIR="$BASEDIR/$APPNAME"
LOG_LEVEL="INFO"

SOCKET_START_PORT=8001
WORKERS_NUMBER=1
# every hour
#METADATA_UPDATE_FREQ=3600
METADATA_UPDATE_FREQ=180

PID_PATH="/var/log/uwsgi"
USER=wert

LOAD_ENV="source $ENVDIR/bin/activate"
RELOAD_CMD="$STOP_CMD; $COMMAND"

mkdir -p $PID_PATH
chown -R $USER $PID_PATH

start() {
    echo "starting pyffd"
    for i in $(seq $SOCKET_START_PORT $(expr $SOCKET_START_PORT + $(expr $WORKERS_NUMBER - 1)));
    do
        PORT=$i
        COMMAND="pyffd -p $PID_PATH/${APPNAME}_${PORT}.pid -a --loglevel=$LOG_LEVEL --log $PID_PATH/$APPNAME.log --error-log $PID_PATH/$APPNAME.error.log --dir=$APPDIR -H 0.0.0.0 -P $PORT --frequency $METADATA_UPDATE_FREQ --no-caching --proxy $APPDIR/pipelines/md.fd"
        echo "$COMMAND"
        su -l $USER -c "$LOAD_ENV && $COMMAND"
    done
    sudo service nginx reload
}

forcestop() {
    echo "stopping pyffd"
    #STOP_CMD="kill -TERM `cat $PID_PATH/$APPNAME.pid`"
    kill -TERM  $(ps ax | grep pyffd | awk -F' ' {'print $1'} | xargs echo)
    # su -l $USER -c "$LOAD_ENV && $STOP_CMD"
}

stop() {
    echo "stopping pyffd"
    if test -f /var/log/uwsgi/pyff_8001.pid ;
        then kill -TERM  $(cat $PID_PATH/pyff_$SOCKET_START_PORT.pid | xargs echo);
    fi

}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  forcestop)
    forcestop
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: motd [start|stop|forcestop|restart]" >&2
    exit 1
    ;;
esac

exit 0
